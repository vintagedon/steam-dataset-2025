# =================================================================================================
# Steam Dataset 2025 - Global Environment Configuration Template
# 
# INSTRUCTIONS:
# 1. Copy this file to '.env' in the project root directory.
# 2. Update the values with your actual credentials and settings.
# 3. This file should NEVER be committed to source control. Add '.env' to your .gitignore file.
# =================================================================================================

# ================================================================================================
# SECTION 1: CORE CREDENTIALS & SECRETS
# ================================================================================================

# -- Steam Web API --
# Get your key from: https://steamcommunity.com/dev/apikey
STEAM_API_KEY=YOUR_STEAM_API_KEY_HERE

# -- PostgreSQL Database --
# Connection details for the PostgreSQL server (proj-pgsql01)
PG_HOST=10.25.20.8
PG_PORT=5432

# Administrative credentials (for setup_database.py script ONLY)
PG_ADMIN_USER=postgres
PG_ADMIN_PASSWORD=your_postgres_admin_password_here

# Application credentials (for data import, APIs, analysis notebooks, etc.)
# This user will be created and granted privileges by the setup script.
PG_APP_USER=steam_user
PG_APP_USER_PASSWORD=your_steam_app_user_password_here

# -- Neo4j Graph Database --
# Connection details for the Neo4j server (proj-neo4j01)
NEO4J_HOST=10.25.20.21
NEO4J_BOLT_PORT=7687
NEO4J_HTTP_PORT=7474

# Administrative credentials for Neo4j
NEO4J_ADMIN_USER=neo4j
NEO4J_ADMIN_PASSWORD=your_neo4j_admin_password_here

# -- Optional Third-Party APIs --
# OpenAI API key for RAG chatbot
OPENAI_API_KEY=your_openai_api_key_here

# -- Security --
# A secure, random string for JWT signing or other cryptographic needs
JWT_SECRET=generate_a_secure_random_string_for_this

# ================================================================================================
# SECTION 2: APPLICATION & PERFORMANCE TUNING
# ================================================================================================

# -- General Application Settings --
# Environment context: development, staging, production
ENVIRONMENT=development

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# CORS allowed origins for web-facing APIs (comma-separated)
ALLOWED_ORIGINS=http://localhost:8501,http://10.25.20.8:8501

# -- Data Collection Script Settings --
API_DELAY_SECONDS=1.5
API_MAX_RETRIES=3
API_SAVE_BATCH_SIZE=25

# -- Machine Learning & Vector Search --
# Hugging Face model for text embeddings (all-MiniLM-L6-v2 is 384 dimensions)
EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2
# Batch size for processing embeddings (adjust based on GPU memory)
EMBEDDING_BATCH_SIZE=100
# Alternative: Local Ollama endpoint
OLLAMA_BASE_URL=http://localhost:11434

# HNSW index parameters for pgvector
HNSW_M=16
HNSW_EF_CONSTRUCTION=64
HNSW_EF_SEARCH=100

# -- Database Connection Pooling --
POSTGRES_MAX_CONNECTIONS=20
POSTGRES_MIN_CONNECTIONS=5
NEO4J_MAX_CONNECTION_POOL_SIZE=100

# -- Monitoring & Observability --
# Enable /metrics endpoint for Prometheus
ENABLE_METRICS=true
METRICS_PORT=9090

# Enable detailed query logging (verbose, may impact performance in production)
ENABLE_QUERY_LOGGING=false
